{"remainingRequest":"/home/huyu0408/FM/vue-musicplayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/huyu0408/FM/vue-musicplayer/src/views/MyMain.vue?vue&type=style&index=0&id=384199bf&lang=css","dependencies":[{"path":"/home/huyu0408/FM/vue-musicplayer/src/views/MyMain.vue","mtime":1735397006849},{"path":"/home/huyu0408/FM/vue-musicplayer/node_modules/css-loader/dist/cjs.js","mtime":1734925322392},{"path":"/home/huyu0408/FM/vue-musicplayer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1734925323578},{"path":"/home/huyu0408/FM/vue-musicplayer/node_modules/postcss-loader/src/index.js","mtime":1734925323141},{"path":"/home/huyu0408/FM/vue-musicplayer/node_modules/cache-loader/dist/cjs.js","mtime":1734925316076},{"path":"/home/huyu0408/FM/vue-musicplayer/node_modules/vue-loader/lib/index.js","mtime":1734925323578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubXktbWFpbiB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQo="},{"version":3,"sources":["MyMain.vue"],"names":[],"mappings":";AAuFA;AACA;AACA","file":"MyMain.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <el-table :data=\"songs\" height=\"100vh\" style=\"width: 100%\">\r\n        <el-table-column label=\"名称\" prop=\"name\"></el-table-column>\r\n        <el-table-column label=\"时长\" prop=\"duration\"></el-table-column>\r\n        <!-- 操作列：导入、播放按钮 -->\r\n        <el-table-column align=\"right\">\r\n            <!-- 表头的导入本地按钮 -->\r\n            <template slot=\"header\" slot-scope=\"scope\">\r\n                <el-button type=\"primary\" @click=\"upload\" style=\"width: 90px;\">导入本地</el-button>\r\n                <!-- 上传TXT文件按钮 -->\r\n                <el-button type=\"success\" @click=\"selectTxtFile\" style=\"width: 90px;\">上传txt</el-button>\r\n                <el-button type=\"danger\" @click=\"downloadMp3\" style=\"width: 90px;\">下载 MP3 </el-button>\r\n            </template>\r\n            <!-- 每一行的播放按钮 -->\r\n            <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" icon=\"el-icon-video-play\" @click=\"play(scope.$index, scope.row)\"></el-button>\r\n            </template>\r\n        </el-table-column>\r\n    </el-table>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { uploadFiles } from '../utils'\r\nimport { uploadTxtFile, downloadMp3File } from '../api/musicApi.js'\r\nexport default {\r\n    computed: {\r\n        ...mapGetters(['index', 'localSongs', 'playingSongs', 'playedSongs']),\r\n        songs() {\r\n            switch (this.$route.path) {\r\n                case '/playingmusic':\r\n                    return this.playingSongs\r\n                case '/playedmusic':\r\n                    return this.playedSongs\r\n                default:\r\n                    return this.localSongs\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(['handlePlay', 'handleClickSong', 'handleUpload']),\r\n        play(_, row) {\r\n            console.log({ index: this.index, audio: row.audio, name: row.name })\r\n            this.handleClickSong({ index: this.index, audio: row.audio, name: row.name })\r\n        },\r\n        async upload() {\r\n            this.$message('加载中，请等候...')\r\n            this.handleUpload(await uploadFiles())\r\n        },\r\n        selectTxtFile() {\r\n            // 触发input的点击事件\r\n            const input = document.createElement('input')\r\n            input.type = 'file'\r\n            input.accept = '.txt'\r\n            input.onchange = this.handleTxtFileChange\r\n            input.click()\r\n        },\r\n        async handleTxtFileChange(event) {\r\n            const file = event.target.files[0]\r\n            if (file && file.type === 'text/plain') {\r\n                try {\r\n                    this.$message('上传中...')\r\n                    const response = await uploadTxtFile(file)\r\n                    console.log('上传成功', response)\r\n                    this.$message.success('TXT文件上传成功！')\r\n                } catch (error) {\r\n                    console.error('上传失败', error)\r\n                    this.$message.error(`上传失败：${error.message || error}`)\r\n                }\r\n            } else {\r\n                this.$message.error('请上传TXT文件')\r\n            }\r\n        },\r\n        // 调用 API 中的 downloadMp3File 方法\r\n        async downloadMp3() {\r\n            try {\r\n                console.log(\"here\")\r\n                const message = await downloadMp3File(); // 调用 API 方法\r\n                this.$message.success(message);\r\n            } catch (error) {\r\n                this.$message.error(error.message || '下载失败');\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.my-main {\r\n    width: 100%;\r\n}\r\n</style>"]}]}